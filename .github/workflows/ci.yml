name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: taskforce_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:6.2
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, pdo_sqlite, gd, mbstring, zip, pcntl
        coverage: xdebug
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.19'
        cache: 'npm'
    
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction
    
    - name: Install NPM dependencies
      run: |
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install
    
    - name: Copy environment file
      run: cp .env.example .env
    
    - name: Generate application key
      run: php artisan key:generate
    
    - name: Set directory permissions
      run: chmod -R 777 storage bootstrap/cache
    
    - name: Configure database
      run: |
        php artisan config:cache
        php artisan migrate --force
        php artisan db:seed --force
    
    - name: Build assets
      run: npm run build
    
    - name: Run PHP tests
      run: php artisan test --testsuite=Unit

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction
    
    - name: Run security audit
      run: composer audit
    
    - name: Run PHP CS Fixer
      run: |
        composer require --dev friendsofphp/php-cs-fixer
        vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.dist.php --dry-run --diff

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.19'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-interaction --no-dev --optimize-autoloader
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install
    
    - name: Build for production
      run: npm run build
    
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          Automated release from CI/CD pipeline
          
          - Build: ${{ github.run_number }}
          - Commit: ${{ github.sha }}
          - Branch: ${{ github.ref }}
        draft: false
        prerelease: false
