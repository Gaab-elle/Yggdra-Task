<?php

require_once 'bootstrap/app.php';

$app = require_once 'bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

use Illuminate\Support\Facades\Route;
use Illuminate\Support\Facades\DB;
use App\Models\User;

echo "üß™ Testando Rota de Notifica√ß√µes...\n\n";

// Verificar se as rotas est√£o registradas
echo "1. Verificando rotas registradas...\n";
$routes = shell_exec('php artisan route:list | grep notifications');
echo $routes;

echo "\n2. Verificando se h√° notifica√ß√µes no banco...\n";
$totalNotifications = DB::table('notifications')->count();
echo "   üìä Total de notifica√ß√µes: {$totalNotifications}\n";

if ($totalNotifications > 0) {
    echo "\n3. Verificando estrutura das notifica√ß√µes...\n";
    $sampleNotification = DB::table('notifications')->first();
    $data = json_decode($sampleNotification->data, true);
    
    echo "   üìù Exemplo de notifica√ß√£o:\n";
    echo "      ID: {$sampleNotification->id}\n";
    echo "      Tipo: {$sampleNotification->type}\n";
    echo "      Usu√°rio: {$sampleNotification->notifiable_id}\n";
    echo "      T√≠tulo: " . ($data['title'] ?? 'SEM T√çTULO') . "\n";
    echo "      Mensagem: " . ($data['message'] ?? 'SEM MENSAGEM') . "\n";
    
    echo "\n4. Verificando notifica√ß√µes para usu√°rio ID 2...\n";
    $userNotifications = DB::table('notifications')
        ->where('notifiable_id', 2)
        ->orderBy('created_at', 'desc')
        ->limit(3)
        ->get();
    
    echo "   üë§ Notifica√ß√µes para usu√°rio ID 2: " . $userNotifications->count() . "\n";
    
    foreach ($userNotifications as $index => $notification) {
        $data = json_decode($notification->data, true);
        echo "   üìù Notifica√ß√£o " . ($index + 1) . ":\n";
        echo "      ID: {$notification->id}\n";
        echo "      T√≠tulo: " . ($data['title'] ?? 'SEM T√çTULO') . "\n";
        echo "      Mensagem: " . ($data['message'] ?? 'SEM MENSAGEM') . "\n";
        echo "      Criada em: {$notification->created_at}\n";
        echo "      ---\n";
    }
}

echo "\n5. Testando rota web...\n";
$webRoute = shell_exec('curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/notifications 2>/dev/null');
echo "   üì° GET /notifications: " . trim($webRoute) . "\n";

echo "\n6. Testando rota API...\n";
$apiRoute = shell_exec('curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/api/notifications 2>/dev/null');
echo "   üì° GET /api/notifications: " . trim($apiRoute) . "\n";

echo "\nüéØ Diagn√≥stico:\n";
echo "========================\n";

if ($totalNotifications > 0) {
    echo "‚úÖ Notifica√ß√µes existem no banco\n";
    
    $hasTitle = isset($data['title']) && !empty($data['title']);
    if ($hasTitle) {
        echo "‚úÖ Notifica√ß√µes t√™m t√≠tulos\n";
    } else {
        echo "‚ùå Notifica√ß√µes n√£o t√™m t√≠tulos\n";
    }
    
    if (trim($webRoute) === '302' || trim($webRoute) === '401') {
        echo "‚úÖ Rota web funcionando (redireciona para login)\n";
    } else {
        echo "‚ùå Problema na rota web\n";
    }
    
    if (trim($apiRoute) === '302' || trim($apiRoute) === '401') {
        echo "‚úÖ Rota API funcionando (redireciona para login)\n";
    } else {
        echo "‚ùå Problema na rota API\n";
    }
    
} else {
    echo "‚ùå Nenhuma notifica√ß√£o no banco\n";
}

echo "\nüí° Para testar no frontend:\n";
echo "1. Fa√ßa login no sistema\n";
echo "2. Abra o console do navegador (F12)\n";
echo "3. Clique no √≠cone de notifica√ß√µes\n";
echo "4. Verifique se h√° erros no console\n";
echo "5. Verifique se as requisi√ß√µes est√£o sendo feitas\n"; 